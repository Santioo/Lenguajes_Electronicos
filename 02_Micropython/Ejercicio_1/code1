from machine import Pin
from utime import sleep
import time
from umqtt.simple import MQTTClient
import network


# Definiciones
ssid = 'Wokwi-GUEST'
wifipassword = ''
sta_if = network.WLAN(network.STA_IF)
sta_if.active(True)


# Conexión a internet
sta_if.connect(ssid, wifipassword)
print("Conectando")
while not sta_if.isconnected():
   print(".", end="")
   time.sleep(0.1)
print("")
print("Conectado a Internet")
# ----


# Conexión a los tópicos
mqtt_server = "io.adafruit.com"
port = 1883
user = "Santio0o"
password = "aio_eSdJ57apDS3NfUMv9gsipqHvxsZK"
client_id_gauge = "Identificador"
topico_lectura="Santio0o/feeds/lectura"


# Conexión al broker
try:
   conexionMQTT = MQTTClient(client_id_gauge, mqtt_server,user=user,password=password,port=int(port))
   conexionMQTT.connect() #Hacemos la conexión.
   print("Conectado con Broker MQTT")
except OSError as e:
   #Si falló la conexión, reiniciamos todo
   print("Fallo la conexion al Broker, reiniciando...")
   time.sleep(5)
   machine.reset()


# Funciones
def enviar_msg(msg):
   try:
       conexionMQTT.publish(topico_lectura,str(msg))
       print(f'Mensaje enviado con exito: {msg}')
   except OSError as e:
       print("Error ",e)
       time.sleep(5)
       machine.reset()
# ----


print("Holla")

espera = 2

led = Pin(15, Pin.OUT)
led2 = Pin(2, Pin.OUT)

while True: 
  led2.off()
  led.on()
  enviar_msg("Led 1 prendido; Led 2 apagado")
  sleep(espera)
  led.off()
  led2.on()
  enviar_msg("Led 1 apagado; Led 2 prendido")
  sleep(espera)
